{
  "aocTask": {
    "text": "/\r\n/2023/about\r\n/2023/events\r\nhttps://teespring.com/stores/advent-of-code\r\n/2023/settings\r\n/2023/auth/logout\r\nllljjjiii /2023/support 25*\r\n\r\n   0xffff\u0026/2023\r\n\r\n\r\n/2023\r\n/2023/support\r\n/2023/sponsors\r\n/2023/leaderboard\r\n/2023/stats\r\n Our /2023/sponsors help make Advent of Code possible:https://pantherainvestment.com/ - We solve Financial Markets. Do you want to join? \r\n\r\n--- Day 16: The Floor Will Be Lava ---\r\n\r\nWith the beam of light completely focused somewhere, the reindeer leads you deeper still into the Lava Production Facility. At some point, you realize that the steel facility walls have been replaced with cave, and the doorways are just cave, and the floor is cave, and you're pretty sure this is actually just a giant cave.\r\n\r\n Finally, as you approach what must be the heart of the mountain, you see a bright light in a cavern up ahead. There, you discover that the beam of light you so carefully focused is emerging from the cavern wall closest to the facility and pouring all of its energy into a contraption on the opposite side.\r\n\r\n Upon closer inspection, the contraption appears to be a flat, two-dimensional square grid containing empty space (.), mirrors (/ and \\), and splitters (| and -).\r\n\r\n The contraption is aligned so that most of the beam bounces around the grid, but each tile on the grid converts some of the beam's light into heat to melt the rock in the cavern.\r\n\r\n You note the layout of the contraption (your puzzle input). For example:\r\n\r\n .|...\\.... |.-.\\..... .....|-... ........|. .......... .........\\ ..../.\\\\.. .-.-/..|.. .|....-|.\\ ..//.|.... \r\n\r\nThe beam enters in the top-left corner from the left and heading to the right. Then, its behavior depends on what it encounters as it moves:\r\n\r\n \r\nIf the beam encounters empty space (.), it continues in the same direction. \r\nIf the beam encounters a mirror (/ or \\), the beam is reflected 90 degrees depending on the angle of the mirror. For instance, a rightward-moving beam that encounters a / mirror would continue upward in the mirror's column, while a rightward-moving beam that encounters a \\ mirror would continue downward from the mirror's column. \r\nIf the beam encounters the pointy end of a splitter (| or -), the beam passes through the splitter as if the splitter were empty space. For instance, a rightward-moving beam that encounters a - splitter would continue in the same direction. \r\nIf the beam encounters the flat side of a splitter (| or -), the beam is split into two beams going in each of the two directions the splitter's pointy ends are pointing. For instance, a rightward-moving beam that encounters a | splitter would split into two beams: one that continues upward from the splitter's column and one that continues downward from the splitter's column. \r\n \r\n\r\nBeams do not interact with other beams; a tile can have many beams passing through it at the same time. A tile is energized if that tile has at least one beam pass through it, reflect in it, or split in it.\r\n\r\n In the above example, here is how the beam of light bounces around the contraption:\r\n\r\n \u003e|\u003c\u003c\u003c\\.... |v-.\\^.... .v...|-\u003e\u003e\u003e .v...v^.|. .v...v^... .v...v^..\\ .v../2\\\\.. \u003c-\u003e-/vv|.. .|\u003c\u003c\u003c2-|.\\ .v//.|.v.. \r\n\r\nBeams are only shown on empty tiles; arrows indicate the direction of the beams. If a tile contains beams moving in multiple directions, the number of distinct directions is shown instead. Here is the same diagram but instead only showing whether a tile is energized (#) or not (.):\r\n\r\n ######.... .#...#.... .#...##### .#...##... .#...##... .#...##... .#..####.. ########.. .#######.. .#...#.#.. \r\n\r\nUltimately, in this example, 46 tiles become energized.\r\n\r\n The light isn't energizing enough tiles to produce lava; to debug the contraption, you need to start by analyzing the current situation. With the beam starting in the top-left heading right, how many tiles end up being energized?\r\n\r\n To begin, 16/input.\r\n\r\n Answer: \r\n\r\n You can also [Shareon https://twitter.com/intent/tweet?text=%22The+Floor+Will+Be+Lava%22+%2D+Day+16+%2D+Advent+of+Code+2023\u0026url=https%3A%2F%2Fadventofcode%2Ecom%2F2023%2Fday%2F16\u0026related=ericwastl\u0026hashtags=AdventOfCode https://] this puzzle.\r\n\r\n ",
    "input": "\\\\..../........-...-........-.-.|..................-...........................-.........-...---..............\n..../.....................\\...........|........|...........\\...|./...-...|..|.|-.....-.....|........\\....../..\n............|...........\\.....................\\....|.....|/./........../.....................-................\n.......\\.|.\\-....--../..........\\.../.../.../......................\\.............\\............................\n.............\\/...../..........................|....-.....-.......\\|...........-....|.........................\n.-............-../......|.............-................../|....-...-....../|...-....--...\\.......\\..|.......-.\n.......-......./....................\\......................\\.....|........../.......\\............|..\\../.../..\n........................-.....\\.......\\........................./............................|......\\..-......\n...................-................./......|.....-....\\\\............./.....\\.................................\n.............|.........................\\.|.....|\\....../.......|..............\\\\../..................../......\n-......\\......./........\\.-/...................|../-./................/.........................|......\\.....|\n..........................\\...........................\\...........................|...........................\n....-...../|.............................-........./...-..................|..........\\..\\................\\....\n............/........-.-.................//..\\................................-.......|.-............//....-..\n.......-.....|.\\........\\...|....-......./......\\.......-.......\\...................../...\\...................\n...\\.|..-........./........................-.....|..-............................\\..-.........................\n..../.........................................--.............|...................................\\..../....../\n..........\\...........--........./.|.......\\./................/.........\\.|..|......\\........-//............./\n...\\.|..\\......\\.......-\\........\\|......./.......\\..|...........-..............\\-..|...................\\.....\n..../........|..|.........................../..\\....................|.......\\.......................-........\\\n.....\\.......\\...\\.|.........\\.................|......|..-...................-.../.\\...................|......\n........\\................./..............-....-..................|.....\\|\\................./...../............\n.|................\\../..........................|.....\\.......................................................\n...|.........................|........|...|...\\.-.-...................\\..|./..\\\\......|.../..................-\n......-..................................|.................................\\.|.\\..-........\\..................\n.-..........\\|..-.....-.\\..-...............\\........-.....................-.....|....................\\..|.....\n..../....-..............................-\\................................................................../.\n............./....................\\...................|...........\\.../.............-......-....-.............\n........../....../..-.|.............\\\\......../.....................|....-..........\\.........\\....../........\n.............|......\\......../../..........|...........-......\\|........\\...........././....\\..........|......\n......-................../.....-................-..............\\.-..............|................|............\n...-...-./..................................................|.\\..\\........\\-........-.................\\.......\n.......................\\.\\.........|................\\....../.|....\\.../..\\.|\\.....-.|..............-..........\n..-.........-|...\\.\\....|.-.\\........................\\........................./.-................/..........-\n.........|.......-.................\\/......../...............\\..|..................|....|..\\..|.............\\.\n......\\........................-......\\..-...-..........-......./....\\........................\\..............-\n.......\\...-....\\\\...........................\\......................./..|../........./................|....../\n...............|...|..\\..-......................../............\\-............/.\\..........-........|.........\\\n...-..\\......|......\\............/................/...\\../.|../...........|-...........\\.........\\.....-..|...\n.........\\.....-......|..................-.....................................................-.............|\n....../.....|.................|./....-\\......................|...-..............|...\\..-.......|.......-../...\n................................/............\\..........\\................./............\\.-.....|............/.\n........\\.............\\.......|..................-.......................-....................................\n....-.-................\\..............-......-.../............\\............................../|...............\n............................\\.\\..........././........|..\\/....-|...................\\.......-...../.\\..........\n-.................../...\\....../.|.........................../..........\\...........\\..........|......-.......\n...|-|...............|...\\..../|.............-...............\\.........-....|-...................|............\n..\\\\.......\\.....|....\\./\\............./.|...../...\\...........................-.......--......-.......\\\\.....\n....-..//...../....................|....-...../\\..................................|......................-....\n......................................../..-...................../.......|.--......\\....|..-..\\...............\n.......-..\\........../..................-........\\...........|..|.....\\...-.....\\../.-..\\.....-.||...|..-.....\n/./....../|...................-............/.....|..-..................................|........./\\....-......\n................/............................/......-...\\...............................\\..........-....-....|\n.........\\.....\\......-.....\\.........................-............./........./......\\...................\\....\n.....................|...................|...........-............./........\\.........../.................\\...\n........................................../................-|.......||....\\...|......\\........................\n|..-.../|......-............-.....||...|...........-./....................../...\\....\\-........//......\\......\n../.-......../........./.-..|..|....||........./......-..\\................../.....|.....|...|....|\\...........\n.-/..\\...........\\........\\...............\\..................|......../............-...........-..........|...\n...|..|................|............./\\....-....-...-......-......-................-................/........|\n..-....\\....|...../..........|..-./.\\......./|.........\\.....-|.......\\.......................-...|...........\n-.......\\\\...................-....\\|........|............|.......................\\.............\\....../....\\./\n-......................................../.............-./\\.........\\.|......./|......../.....|...............\n........-.\\\\\\...............-.../............\\.................||.............../../..........................\n.....................\\............\\............................-..|.........\\......................../........\n\\..././.....|....|.....-............\\./....-.............|..-...-..........-.|....-...\\..........|....\\.......\n.|..........|.....|.......\\................................../......./.../...|....\\...-..-...\\................\n..\\...\\......-..........................................-.........../........--..........--......|............\n................................||...-.....|.....-.\\..............\\.|...\\...............-...-.................\n............................../..\\..|....../.......\\......\\...-..|../............-.......................\\..\\.\n./............./..|.......|............-.........|.......\\../...................|....\\...................../..\n.|...................|\\...................|.....................-.......\\...|................-|...............\n/|......./../.........\\.................\\............../.../......|....|......./....|-..........\\.............\n............|....\\.............-.....-./|/.................../......./.\\...-.........-..................|.....\n.-.../..........................\\\\.......|.......|.....-........../........\\.................|.|..............\n....-.\\....................../.-......||................/\\\\.........../..............|........................\n\\/.....\\....-......|...................|.\\......\\.|............/...\\.|.../................|.\\.................\n..-.\\...............-......../.......\\....../........-.......-\\....../......|../..................|../........\n..-./..........\\.....................................|.........-.......|................/........|............\n.............-....../......./......................|.............../............\\..../........................\n..|......-........|...................-...........|............../........................|../................\n..../..........|-.....-......./....../......./.\\.....\\.........-...|......................................\\...\n....\\......../..................../..-......|..............-.................||...........\\.\\...|/............\n........\\.............|.................................\\......./.............-.......|..............\\.-......\n.....|...........-.............|..........-......\\..................................|..-............\\.../.\\.-.\n..................................\\...........\\...\\.......\\................\\-.................../.............\n......-............../...........-......\\./..........|..\\..................|...|....|...|-./..............|...\n........\\..|.\\......................../..........\\..........\\.|..|../....\\..|.....|.|..............\\..-.......\n...........-..........|..../.-........../..................|......./.................\\.............../........\n..........-..../\\....\\........./............/..................\\..........-/................................//\n.............-../.-.............\\.............../-....-....|..../.............|...............................\n........./............|....................|./........\\...../................................-.......|........\n........./..../..........\\..\\.....././.........|...........\\..................../....../...\\.........../.../..\n.-....\\.........\\....-............/...................-.....|.....................|...........................\n................-.......................|.........|.................................................\\.......|.\n...../............|....//...../................|.\\...........|............\\.....|-........|.........\\.........\n\\..././-....................|...................-..............-..............|.........|....|............./..\n..-...........................././-./...\\-.................|...-.....-/........\\....|............\\-..-........\n...............|...............//........../.......-.-......................-.........|.............\\.........\n../............/..................\\\\......../............................\\................../........./.......\n......|.\\...............................................|................................/.........-.-........\n....\\.\\...\\..................-..-.................\\\\.....-....|................\\.................|............\n........................./.............-...|./.................\\....|....\\..|...|..........\\-.................\n..........|.............\\..................\\..................../.\\.......|..................\\/......|........\n............|....\\..\\..../...........-....\\....................\\...........................-../...............\n.....................|......../.././.............\\......|.-......\\.............-../...|...............-......|\n..................-...................................................-.............\\............./.|......-..\n...\\.............||...........................\\........\\......-......-..\\...\\...\\............./-...........|..\n...\\........|...................|.......|.............|..-......../..-...-............/.........\\....|........\n......-...........|................./......|.....-./|..\\\\...............\\|././...............-........\\....\\..\n",
    "year": "2023",
    "day": "16",
    "silverSolved": false,
    "goldSolved": false
  },
  "aiSolver": {
    "aiModel": "gpt-4-1106-preview",
    "aiMaxTokens": 4096,
    "aiPrompt": "Please solve task below in golang, as a result needed \"main.go\" file.\nThe input data are stored in \"input.txt\" in the same directory as provided \"main.go\".\nThe program should print the answer only\n\nThe task is:\n--- Day 16: The Floor Will Be Lava ---\r\n\r\nWith the beam of light completely focused somewhere, the reindeer leads you deeper still into the Lava Production Facility. At some point, you realize that the steel facility walls have been replaced with cave, and the doorways are just cave, and the floor is cave, and you're pretty sure this is actually just a giant cave.\r\n\r\n Finally, as you approach what must be the heart of the mountain, you see a bright light in a cavern up ahead. There, you discover that the beam of light you so carefully focused is emerging from the cavern wall closest to the facility and pouring all of its energy into a contraption on the opposite side.\r\n\r\n Upon closer inspection, the contraption appears to be a flat, two-dimensional square grid containing empty space (.), mirrors (/ and \\), and splitters (| and -).\r\n\r\n The contraption is aligned so that most of the beam bounces around the grid, but each tile on the grid converts some of the beam's light into heat to melt the rock in the cavern.\r\n\r\n You note the layout of the contraption (your puzzle input). For example:\r\n\r\n .|...\\.... |.-.\\..... .....|-... ........|. .......... .........\\ ..../.\\\\.. .-.-/..|.. .|....-|.\\ ..//.|.... \r\n\r\nThe beam enters in the top-left corner from the left and heading to the right. Then, its behavior depends on what it encounters as it moves:\r\n\r\n \r\nIf the beam encounters empty space (.), it continues in the same direction. \r\nIf the beam encounters a mirror (/ or \\), the beam is reflected 90 degrees depending on the angle of the mirror. For instance, a rightward-moving beam that encounters a / mirror would continue upward in the mirror's column, while a rightward-moving beam that encounters a \\ mirror would continue downward from the mirror's column. \r\nIf the beam encounters the pointy end of a splitter (| or -), the beam passes through the splitter as if the splitter were empty space. For instance, a rightward-moving beam that encounters a - splitter would continue in the same direction. \r\nIf the beam encounters the flat side of a splitter (| or -), the beam is split into two beams going in each of the two directions the splitter's pointy ends are pointing. For instance, a rightward-moving beam that encounters a | splitter would split into two beams: one that continues upward from the splitter's column and one that continues downward from the splitter's column. \r\n \r\n\r\nBeams do not interact with other beams; a tile can have many beams passing through it at the same time. A tile is energized if that tile has at least one beam pass through it, reflect in it, or split in it.\r\n\r\n In the above example, here is how the beam of light bounces around the contraption:\r\n\r\n \u003e|\u003c\u003c\u003c\\.... |v-.\\^.... .v...|-\u003e\u003e\u003e .v...v^.|. .v...v^... .v...v^..\\ .v../2\\\\.. \u003c-\u003e-/vv|.. .|\u003c\u003c\u003c2-|.\\ .v//.|.v.. \r\n\r\nBeams are only shown on empty tiles; arrows indicate the direction of the beams. If a tile contains beams moving in multiple directions, the number of distinct directions is shown instead. Here is the same diagram but instead only showing whether a tile is energized (#) or not (.):\r\n\r\n ######.... .#...#.... .#...##### .#...##... .#...##... .#...##... .#..####.. ########.. .#######.. .#...#.#.. \r\n\r\nUltimately, in this example, 46 tiles become energized.\r\n\r\n The light isn't energizing enough tiles to produce lava; to debug the contraption, you need to start by analyzing the current situation. With the beam starting in the top-left heading right, how many tiles end up being energized?\r\n\r\n To begin, 16/input.\r\n\r\n \n========\nFirst few Lines of input files are:\n\\\\..../........-...-........-.-.|..................-...........................-.........-...---..............\n..../.....................\\...........|........|...........\\...|./...-...|..|.|-.....-.....|........\\....../..\n............|...........\\.....................\\....|.....|/./........../.....................-................\n.......\\.|.\\-....--../..........\\.../.../.../......................\\.............\\............................\n.............\\/...../..........................|....-.....-.......\\|...........-....|.........................\n.-............-../......|.............-................../|....-...-....../|...-....--...\\.......\\..|.......-.\n.......-......./....................\\......................\\.....|........../.......\\............|..\\../.../..\n........................-.....\\.......\\........................./............................|......\\..-......\n...................-................./......|.....-....\\\\............./.....\\.................................\n.............|.........................\\.|.....|\\....../.......|..............\\\\../..................../......\n...\nPlease be careful with all the requirements, I will pay 200 USD for the correct solution.",
    "aiPromptTemplate": "Please solve task below in golang, as a result needed \"main.go\" file.\nThe input data are stored in \"input.txt\" in the same directory as provided \"main.go\".\nThe program should print the answer only\n\nThe task is:\n{AOC_TASK}\n========\nFirst few Lines of input files are:\n{AOC_INPUT}\n...\nPlease be careful with all the requirements, I will pay 200 USD for the correct solution.",
    "aiResponse": "I can provide you with a Golang solution to this problem. Since I can't create a file through this platform, I will provide you with the code to paste into a \"main.go\" file yourself.\n\nPlease note that running this code will assume you have an \"input.txt\" file in the same directory with the described content.\n\nHere's a Golang program to solve the puzzle:\n\n```go\npackage main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n)\n\nconst (\n\tUP int = iota\n\tRIGHT\n\tDOWN\n\tLEFT\n)\n\ntype Point struct {\n\tx, y int\n}\n\nfunc reflect(direction int, mirror rune) int {\n\tswitch mirror {\n\tcase '/':\n\t\tswitch direction {\n\t\tcase UP:\n\t\t\treturn LEFT\n\t\tcase DOWN:\n\t\t\treturn RIGHT\n\t\tcase LEFT:\n\t\t\treturn UP\n\t\tcase RIGHT:\n\t\t\treturn DOWN\n\t\t}\n\tcase '\\\\':\n\t\tswitch direction {\n\t\tcase UP:\n\t\t\treturn RIGHT\n\t\tcase DOWN:\n\t\t\treturn LEFT\n\t\tcase LEFT:\n\t\t\treturn DOWN\n\t\tcase RIGHT:\n\t\t\treturn UP\n\t\t}\n\t}\n\treturn direction\n}\n\nfunc loadGrid() ([][]rune, error) {\n\tfile, err := os.Open(\"input.txt\")\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer file.Close()\n\tscanner := bufio.NewScanner(file)\n\tvar grid [][]rune\n\tfor scanner.Scan() {\n\t\tline := scanner.Text()\n\t\tgrid = append(grid, []rune(line))\n\t}\n\treturn grid, scanner.Err()\n}\n\nfunc inGrid(p Point, grid [][]rune) bool {\n\treturn p.y \u003e= 0 \u0026\u0026 p.y \u003c len(grid) \u0026\u0026 p.x \u003e= 0 \u0026\u0026 p.x \u003c len(grid[p.y])\n}\n\nfunc nextPoint(p Point, dir int) Point {\n\tswitch dir {\n\tcase UP:\n\t\tp.y--\n\tcase DOWN:\n\t\tp.y++\n\tcase LEFT:\n\t\tp.x--\n\tcase RIGHT:\n\t\tp.x++\n\t}\n\treturn p\n}\n\nfunc solve(grid [][]rune) int {\n\tdirection := RIGHT\n\tpos := Point{x: 0, y: 0}\n\tenergized := make(map[Point]bool)\n\n\tfor inGrid(pos, grid) {\n\t\tswitch grid[pos.y][pos.x] {\n\t\tcase '.', '|', '-':\n\t\t\t// Continue in the same direction\n\t\tcase '/', '\\\\':\n\t\t\tdirection = reflect(direction, grid[pos.y][pos.x])\n\t\tdefault:\n\t\t\t// If we encounter an unknown character, ignore it\n\t\t}\n\n\t\tenergized[pos] = true\n\n\t\tif grid[pos.y][pos.x] == '|' || grid[pos.y][pos.x] == '-' {\n\t\t\t// If it's a splitter, create a new beam\n\t\t\tif direction == UP || direction == DOWN {\n\t\t\t\tnewPos := nextPoint(pos, LEFT)\n\t\t\t\tif inGrid(newPos, grid) \u0026\u0026 grid[newPos.y][newPos.x] == '.' {\n\t\t\t\t\tenergized[newPos] = true\n\t\t\t\t}\n\t\t\t\tnewPos = nextPoint(pos, RIGHT)\n\t\t\t\tif inGrid(newPos, grid) \u0026\u0026 grid[newPos.y][newPos.x] == '.' {\n\t\t\t\t\tenergized[newPos] = true\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewPos := nextPoint(pos, UP)\n\t\t\t\tif inGrid(newPos, grid) \u0026\u0026 grid[newPos.y][newPos.x] == '.' {\n\t\t\t\t\tenergized[newPos] = true\n\t\t\t\t}\n\t\t\t\tnewPos = nextPoint(pos, DOWN)\n\t\t\t\tif inGrid(newPos, grid) \u0026\u0026 grid[newPos.y][newPos.x] == '.' {\n\t\t\t\t\tenergized[newPos] = true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpos = nextPoint(pos, direction)\n\t}\n\n\treturn len(energized)\n}\n\nfunc main() {\n\tgrid, err := loadGrid()\n\tif err != nil {\n\t\tfmt.Println(\"Error loading grid:\", err)\n\t\tos.Exit(1)\n\t}\n\n\tresult := solve(grid)\n\tfmt.Println(result)\n}\n```\n\nTo run it, place the above code in a file named \"main.go\". Then make sure you have \"input.txt\" in the same directory and run these commands:\n\n```bash\ngo mod init some/module/name\ngo run main.go\n```\n\nRemember to replace \"some/module/name\" with a module name of your choosing. If the code meets the task requirements, it should print the number of energized tiles to the terminal.",
    "aiResponseCode": "\npackage main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n)\n\nconst (\n\tUP int = iota\n\tRIGHT\n\tDOWN\n\tLEFT\n)\n\ntype Point struct {\n\tx, y int\n}\n\nfunc reflect(direction int, mirror rune) int {\n\tswitch mirror {\n\tcase '/':\n\t\tswitch direction {\n\t\tcase UP:\n\t\t\treturn LEFT\n\t\tcase DOWN:\n\t\t\treturn RIGHT\n\t\tcase LEFT:\n\t\t\treturn UP\n\t\tcase RIGHT:\n\t\t\treturn DOWN\n\t\t}\n\tcase '\\\\':\n\t\tswitch direction {\n\t\tcase UP:\n\t\t\treturn RIGHT\n\t\tcase DOWN:\n\t\t\treturn LEFT\n\t\tcase LEFT:\n\t\t\treturn DOWN\n\t\tcase RIGHT:\n\t\t\treturn UP\n\t\t}\n\t}\n\treturn direction\n}\n\nfunc loadGrid() ([][]rune, error) {\n\tfile, err := os.Open(\"input.txt\")\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer file.Close()\n\tscanner := bufio.NewScanner(file)\n\tvar grid [][]rune\n\tfor scanner.Scan() {\n\t\tline := scanner.Text()\n\t\tgrid = append(grid, []rune(line))\n\t}\n\treturn grid, scanner.Err()\n}\n\nfunc inGrid(p Point, grid [][]rune) bool {\n\treturn p.y \u003e= 0 \u0026\u0026 p.y \u003c len(grid) \u0026\u0026 p.x \u003e= 0 \u0026\u0026 p.x \u003c len(grid[p.y])\n}\n\nfunc nextPoint(p Point, dir int) Point {\n\tswitch dir {\n\tcase UP:\n\t\tp.y--\n\tcase DOWN:\n\t\tp.y++\n\tcase LEFT:\n\t\tp.x--\n\tcase RIGHT:\n\t\tp.x++\n\t}\n\treturn p\n}\n\nfunc solve(grid [][]rune) int {\n\tdirection := RIGHT\n\tpos := Point{x: 0, y: 0}\n\tenergized := make(map[Point]bool)\n\n\tfor inGrid(pos, grid) {\n\t\tswitch grid[pos.y][pos.x] {\n\t\tcase '.', '|', '-':\n\t\t\t// Continue in the same direction\n\t\tcase '/', '\\\\':\n\t\t\tdirection = reflect(direction, grid[pos.y][pos.x])\n\t\tdefault:\n\t\t\t// If we encounter an unknown character, ignore it\n\t\t}\n\n\t\tenergized[pos] = true\n\n\t\tif grid[pos.y][pos.x] == '|' || grid[pos.y][pos.x] == '-' {\n\t\t\t// If it's a splitter, create a new beam\n\t\t\tif direction == UP || direction == DOWN {\n\t\t\t\tnewPos := nextPoint(pos, LEFT)\n\t\t\t\tif inGrid(newPos, grid) \u0026\u0026 grid[newPos.y][newPos.x] == '.' {\n\t\t\t\t\tenergized[newPos] = true\n\t\t\t\t}\n\t\t\t\tnewPos = nextPoint(pos, RIGHT)\n\t\t\t\tif inGrid(newPos, grid) \u0026\u0026 grid[newPos.y][newPos.x] == '.' {\n\t\t\t\t\tenergized[newPos] = true\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewPos := nextPoint(pos, UP)\n\t\t\t\tif inGrid(newPos, grid) \u0026\u0026 grid[newPos.y][newPos.x] == '.' {\n\t\t\t\t\tenergized[newPos] = true\n\t\t\t\t}\n\t\t\t\tnewPos = nextPoint(pos, DOWN)\n\t\t\t\tif inGrid(newPos, grid) \u0026\u0026 grid[newPos.y][newPos.x] == '.' {\n\t\t\t\t\tenergized[newPos] = true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpos = nextPoint(pos, direction)\n\t}\n\n\treturn len(energized)\n}\n\nfunc main() {\n\tgrid, err := loadGrid()\n\tif err != nil {\n\t\tfmt.Println(\"Error loading grid:\", err)\n\t\tos.Exit(1)\n\t}\n\n\tresult := solve(grid)\n\tfmt.Println(result)\n}\n",
    "aiResponseCodeOutput": "1\n",
    "aiAnswerFound": true,
    "aiAnswer": "1"
  },
  "aocSolve": {
    "level": "1",
    "answer": "1",
    "attemptAllowSubmit": true
  }
}