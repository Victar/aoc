{
  "aocTask": {
    "text": "/\r\n/2023/about\r\n/2023/events\r\nhttps://teespring.com/stores/advent-of-code\r\n/2023/settings\r\n/2023/auth/logout\r\nllljjjiii /2023/support 31*\r\n\r\n   var y=/2023;\r\n\r\n\r\n/2023\r\n/2023/support\r\n/2023/sponsors\r\n/2023/leaderboard\r\n/2023/stats\r\n Our /2023/sponsors help make Advent of Code possible:https://picnic.app/careers/teams/technology-and-engineering?utm_source=adventofcode+\u0026utm_medium=payed - We use Java, Python, React, AWS and more to bring our tech-driven approach to online groceries in Europe! #hiring #amsterdam \r\n\r\n--- Day 21: Step Counter ---\r\n\r\nYou manage to catch the 7 right as it's dropping someone else off on their all-expenses-paid trip to Desert Island! It even helpfully drops you off near the 5 and his massive farm.\r\n\r\n \"You got the sand flowing again! Great work! Now we just need to wait until we have enough sand to filter the water for Snow Island and we'll have snow again in no time.\"\r\n\r\n While you wait, one of the Elves that works with the gardener heard how good you are at solving problems and would like your help. He needs to get his https://en.wikipedia.org/wiki/Pedometer in for the day, and so he'd like to know which garden plots he can reach with exactly his remaining 64 steps.\r\n\r\n He gives you an up-to-date map (your puzzle input) of his starting position (S), garden plots (.), and rocks (#). For example:\r\n\r\n ........... .....###.#. .###.##..#. ..#.#...#.. ....#.#.... .##..S####. .##..#...#. .......##.. .##.#.####. .##..##.##. ........... \r\n\r\nThe Elf starts at the starting position (S) which also counts as a garden plot. Then, he can take one step north, south, east, or west, but only onto tiles that are garden plots. This would allow him to reach any of the tiles marked O:\r\n\r\n ........... .....###.#. .###.##..#. ..#.#...#.. ....#O#.... .##.OS####. .##..#...#. .......##.. .##.#.####. .##..##.##. ........... \r\n\r\nThen, he takes a second step. Since at this point he could be at either tile marked O, his second step would allow him to reach any garden plot that is one step north, south, east, or west of any tile that he could have reached after the first step:\r\n\r\n ........... .....###.#. .###.##..#. ..#.#O..#.. ....#.#.... .##O.O####. .##.O#...#. .......##.. .##.#.####. .##..##.##. ........... \r\n\r\nAfter two steps, he could be at any of the tiles marked O above, including the starting position (either by going north-then-south or by going west-then-east).\r\n\r\n A single third step leads to even more possibilities:\r\n\r\n ........... .....###.#. .###.##..#. ..#.#.O.#.. ...O#O#.... .##.OS####. .##O.#...#. ....O..##.. .##.#.####. .##..##.##. ........... \r\n\r\nHe will continue like this until his steps for the day have been exhausted. After a total of 6 steps, he could reach any of the garden plots marked O:\r\n\r\n ........... .....###.#. .###.##.O#. .O#O#O.O#.. O.O.#.#.O.. .##O.O####. .##.O#O..#. .O.O.O.##.. .##.#.####. .##O.##.##. ........... \r\n\r\nIn this example, if the Elf's goal was to get exactly 6 more steps today, he could use them to reach any of 16 garden plots.\r\n\r\n However, the Elf actually needs to get 64 steps today, and the map he's handed you is much larger than the example map.\r\n\r\n Starting from the garden plot marked S on your map, how many garden plots could the Elf reach in exactly 64 steps?\r\n\r\n To begin, 21/input.\r\n\r\n Answer: \r\n\r\n You can also [Shareon https://twitter.com/intent/tweet?text=%22Step+Counter%22+%2D+Day+21+%2D+Advent+of+Code+2023\u0026url=https%3A%2F%2Fadventofcode%2Ecom%2F2023%2Fday%2F21\u0026related=ericwastl\u0026hashtags=AdventOfCode https://] this puzzle.\r\n\r\n ",
    "input": "...................................................................................................................................\n.#..#.......#....#.......#.#.....#......#..#.#.........#..............#............#......#........#...##........#..#.....#........\n..#......#.###....#........#..#....##..#................#................#...........#..........##.#.#....#....#.....#....#...##.#.\n.......#....#..#..#...#........#.....#.............##.....#.............#.#.........##......##.#.......#...#...#...........#.##.##.\n....#...#......#.#.##.....#.#..##..#..........#.#..##.....................#............#....##............#......#.........#....#..\n......#...#..##...#...#.....#......##.#......#..##.#..##.....................#.......##......##.......##.......#..#.....#.....#....\n.#...#...#....#.......#..#.#...##.....#..#..##.....#........................#....#............#....#.....#.....#.#...#...........#.\n..#..........#..###............#...###.##..#..#....##.........#...................##.#.......#......#......#.........#.............\n..................#.#.#...#..#..#..#.#............##............................#......................###...#.....##.........#....\n............#....................#...........#.....................#.#........#..#.....#...#...#......#.#.#...#.......#......##....\n..##.#........#..#...#........#..#...#..#....#.#..................................#..#.............#..#.#..#....##...........##.#..\n.....##.#......#..###.............#.#....##..................#......#..##...............#....#.....#..........#........#...........\n...#.#.......##......##.#.###..##.........#.....#...................#...#................#.##....#..........#.#.......#.#......#...\n.#..#.#.....#.....##...#.............#....#...............#...##..........#...............................#......#.....##..........\n........#................#..##......#....###..#...........#.#.......#....#..................##...#.................#.#.....#...#...\n..#..#......#.#.#.......................#.#...................#.....##.#..............#...........#....#.....#....#...##..#........\n...#.#....#.##.......#..........#............#..............#.#.#.##........#.................#.#....#....##....#......#......#....\n.#.....#...#.#.#.#......#.#.#......#.#.#............#....#........#........#............#.............#.#..###....#..##.....#......\n..#.......#..#....#......#..#....#.................#....#.......#...#....#.....................#.##............##...............##.\n.#...##.....#..#..#.....#............#.#..............#.......#.....#..#..#.#..#.........#.##....#...###..###.....#.....#.....##.#.\n.....#.....#.#....##.#.....#.....#.....................##.....#.................#..............#.#..#.#......#.......#.....#.......\n.....#.#.....#........................................##....#............#......#..............#..................#..##.#.......#..\n.............#.#...##..............#....................#..........#..#...#.#.#..............#...#....##.....#.........#....#.##...\n.......#.........#....###..............................#......##..........#....#................#....#.#.........#....#.......#....\n..#...#....#.........#..............##...........#..#.#....#....#.##....#...........................#..............#....#....###...\n.........###.......#...........#....#.........#..#...##...............#........#..##............#.#..#....#...#.#.......#......##..\n....#.....##..#................#........................#......#.....#...#.....##..............#......#..###.......#.......#.#.#...\n..##.#.....#..................................##.....#...##.....#.##.....#.#.......................#....#....##..........#.....#...\n...#.#..#.......#.......#.#...##..................#.##....#....#........#.#......#.#...#...........#......#....#.#..#.....#.#....#.\n.#......#........#.#.#.......#...........#....#....#.....#....##............#.....................#...............#....#...#.#.....\n...##..............###.#....#..#........#..#..#.......#.##.....#.....#..#......#...##..##............#....##......#.#.##...#.......\n........#...#............##............##......#..###.......................##..#.#.....#...........#.#.#.......#.#........#.#.#...\n.............##........#....##.................##..#..............................#.#.....#..#...................#...............#.\n....#....#.....#.......##.###..........#...##.....##...#........#...................#....#.##.............#.#....#.#.....#.....#...\n....#...##.......#...##.................#..##............##....##.....#...........#.#.#................#..#..#...#.............#...\n....##...........#...####.........#.............#..##............................#....##.#...#...............#...#...#....#........\n...................#...##............#....#.#....#..........#.#......###...................#.#...#........##......#....#.........#.\n....#..#...#..##.....#..#.......#...#..#.........#.#..###...........#..#..##...#.......#.....#....#...................#.........#..\n..#.........#....#..#.............#...#...#.........#...#..........#...#...#.....##........................#.......##...#........#.\n...#.....#...#.....#.............##...........#..#.##....#.#..............###.#.##.....#..........##...............#....#...#..##..\n..##..............#.#..........#..##.#.#.......#......##...#.#.....##....#....#.#....#......#.......#..............##.........#..#.\n.......###.####................#...........##....#......##...#.............###...........#......#...#.#...........#.........#......\n...#.#......#..#............#.#.....#......#...........#...............#.#.....#............#.......#....................#....#....\n......#....#..................#...................##..........#....#.#.......................#...................##......#.#..#....\n.....##........#..........#.....#.........#....##.....###..........#..#.....#....#.......#....#.....................#.......#......\n.#......#...#.............#..............................##..#.#..##....#..............#.#......#............................#.....\n......##.....................#..............##..#...................##....#............#...#...#..#..#...............##..........#.\n.##.#..#.....#........##.......##.............##.......#.#..........#........##.....#..#.#........#..#.....##........#.#..#........\n.#..###...............#...##........##......#.#..##..#....#.......##..#.....##.....#..........#.#..#....#.............#........#...\n...#......##..........#..#..##.##.....#....#.#...............##.......#.#.............#.............##..#.#.............#........#.\n............................#......#....#...##.......#..##.....#.............##...####..#.....#......#.#.##........................\n........#.#.......#...#..#.....#.........#.......#...#....#...#...##...#...#........#..#..........##.#.............................\n........................#..........#..#....##........#.........##...........##..........#.#.#.#...#.....#.#..............#...#..#..\n...#..#..........##...#...###..............##......#...........##.##..#...#.......#....#......#...........#.#...............#......\n...##...........#..........##...#..#.#.......#....#.#.#.......#.......#.....#........#.......#.......#.#........#............#.....\n.#............#....##........#........####.#..##......#......#..#.......#........#...#....#......#....#.....#......#...............\n.....#...........#..........#.....#..#..#...#...............#.......#.......#.#............#....#...#..............................\n.#................#....#..............##...#....#...##.#..##.........................#................##.#........##...............\n.#...........#..#.#.....##.........##..#.#.#....#....#......##..........#.....................#.....#.......##...##..............#.\n.#........#.##.#..#.#...###.#..........#....#......#..............................#..#.#.##...#..#...#.....#...##...#...#..........\n............#.#.....#.####......#......##...#.#.........#..#........#..........#....#.#..##.#.#.#..............#...#..#..#.......#.\n........#..#..#.....#..#....#.##...................#...#....##..#.#..#...##..#...#...................#......#...#...#.##...........\n.......#............##...#.#....#..#........#.........##...............#...#..#...........#..#...#.......#......#..........#.......\n............#...........#.#....#....#..##.........#.#..#................#.#.#.......#..#.....##........................###.........\n.....#..#...#.....#.#......#..##......#....##...#..#....#............#.........#......#.....#..#....#.##...........#.##............\n.................................................................S.................................................................\n........#...............#..........#.#.......##...#...#.......#.#..........#.#.....#.....##.......#.......#...#.......#..#.........\n...........#.........#...#.............#......#..#.#.#.#...................#...#...#.......#...#........#.#........#....#...#......\n.......##...........#................#...#..#..........#....#.#.#...###...#.............##..#....#.#...#.........#.......###.......\n............#...........##..#........#....##.....#............#..........#...#....#..#.......##.......#...#...#......##..#.........\n..........#....#.............#...#.....#....#.....#..#..#.......#....#..#.............#..#...........#..##...#....#.#.#............\n..............#.......#.......#..#......#..............#...........#.##..###..####...#..................#.#..#..#..#.#..........##.\n.#...........#...#.......#..#.....#.....#....##......#..........#..#..#.........#...#..#...........................................\n...#...........#.#.#.....#.#.#...##..#...#.....#..........#.....#.......#.........#.....#.#...#.....#......#.........##.........#..\n...................##.........#.....#..#...#.##...#..........##........#.................#...#..#....#.......#...............#.....\n....................#..##.......#.......#......#..................#.#.....#...####.....#............#...#...#.###................#.\n.......................#...#.....#.......#..#..#.......#..............#.....#.#....#..#..#...................#...............#.....\n.....#...................#.......#.....##......#..#.#..#...............#...#............#.....#..........#.#..#...#.............#..\n...................#.........#..........#.....##..#....#......#........#.....#....##.........#.........#....#..................#...\n......#...............#.#.................#.#..##..#....##........#..........#...#...##......#..........#......#........#........#.\n..#.#.......................#.....#.#..........####.................#.....#....#...##.#.....##.#...........................##......\n.........#........................#...........#...#.##..................#.#.......##...#.#..#..............#...................#.#.\n..##.#..#.#..........#..#..#..#....#...........##.#.....##.#..#.#.......................#...#.....#..#.................###..##.....\n.#..#.#...............#..........................#.......##..#....#......#.....#...#....#.......#....##..#......................##.\n.....#........#.............#..#.........#....#.#.#....##.......#.#.......#............................#..................#.##.#...\n....#.##.#..............#......#..#....#...............#...###..........#.#......##.#...#.#.#.#.#........#.........#.....#....##...\n.....#.#.#..#.............#..............#...#...#..##..#....#..#.....#.#.....#...#..........##..........#.............#..#..#.....\n..#...#..##.....#............#..#.#......#..#....#....#.....................#.....#.................#.##.........#......#..........\n.......#..#.##..#..#................##.................#..#........#........#...#.....#...........#.............#....#..........##.\n.......#.......................#......#..........##...#.#......#..##........#.....#......#....#................##...#..............\n.....#.....##....#............#.#........#............#.#......#.........#....#.............##..#..#...............#...#.#...##.##.\n...#....#.##.........#..................#.........#......#.....##.###....#.#...#...#.##...#..................#.....#....#.#...#....\n.....##.........#.....#...........#...........#.........#.........#.#..##.#.......##.........##............##.......#....#.........\n....................#...........#........#.#....#........#.........#.....#...#...#....#..........#........#.#......#........#......\n..............#..#................#.......#....#.#.........#......#.......#.....................................#.....##..#........\n......#...#.#...#............................#........#..#...........................#...#.##..........................#.#.........\n...........#..##.#...#...#.......................#..#.....................#.............#..#.............#.#.#..#.#..#.............\n.......#............................#.....#.#..#.#..#.#..............#.............#..#....................#........#.......#....#.\n.#...##..###.#..#....#.....#.#...............#.............#......#....#....#...#........#............#.##.....#....#...#........#.\n.....##........#..#......#.#.##...........#............#.......#...#...#............#.....#.................#........#.#..#.#......\n...#.....#.#..#......#.##.................#.#..#.......##.........................##...............#...#...#......#......##........\n..#....#.......#.#...#....#..###.................#...#...#.##........#..#.#..#...#...#................#.....#.....#.#....#.##..##..\n......#.....#.#.#.........................#..#.#...#...#................#....#...#...#..#.................#....##.......#.#..#.....\n..#...........#.......#....................#.....#...#.#...............#.#....##...#...............#....#........#.#.##.##..#.#.#..\n.#...#.............#..###.......#...........#.......................#....###..#..#..............#....#..#....#......##..#.#........\n..................#.............#.................#.........##....##..#.............#...........#...............#...#........#.#...\n..#.....###.#.#.....#.#.............#......................#....#.....#............#..............#..#...........#..............#..\n.##......#..#..##.......#..##......#...............#...#.............#.##...#...............#........#...#..#.................#....\n...#.#...##.#..#...##.#.#..........#...#.........#.#......#..#.......#........#..#...........#.................###.................\n.......................##......#..............................#.........#....#..................#..#...#..#.......#.......##.......\n....#...#.....#.............#...#.................#.#...#..........##....#..##.................#......#..#............##...........\n.........#..........#......#.......#.......................##.##..............................#....##.........#.....###........#.#.\n....#.#.#.............#.....#..............#........#.................#..#..............#...........#.....#........#..##...........\n......##.#......#....#..#.......###.......#.............#.........#...#....#..#....................#.......#.##.#.##.....##....#...\n..#.....#.....##..#.....#...#....#....#.#..............#.#....##.......#.#.#..........................#.#.#.#.##..........#..#.....\n...............#.#.###.......###.#...........#........#...###............#..#.......#...##.......##...#........#...................\n.....#.........#.#.#..............##.........##............##...#...#...................#..###..........#..#..#.#...#..#...........\n........#......#........##.#.....#.#...#....#...#.............#.........#.#.......#.....#.......##...#....#.........#.....#..#.....\n.##......#..........#......#............#.....................##...#..............#...............##.............##...#.#..........\n...#..#..#.#..#......#.......##.......#.....#................#...................#............#.........#.........#.........##.##..\n....#...#........##.#........#..#.#.....#.........................##.#.............#...#.#..........#..#...........................\n.........#..#..#.....##.......##......#..#...#..............#....................##...#......##......#...#.#........##.............\n..#....#..#..#.#......#......#...................#.##........#.#.....#.............##.....#.......................##...........#...\n.#.#..#........#.....#..#...........#.##....................................#...........##..................#...........##.........\n..........#..#.............#..#......#..##.##.....#...#.........#.............................#.#...#....................#.....#...\n.#..........#..#.#.#.#..#..#..#....#..#.......#........##..................#..#.#....#......#.......#.##.......#.#......###........\n............#........#....#..#.#...#..##..#..#..#........................#....##......##........#.....##.....#.......#.......###.#.\n...#.#........................#......#..............#...............................#.#..#..###...................#.....#..........\n..#....#.....#......#.#.....#..##......#..#..##.....#.....#.....................#............#..#...#.#..##....##..#...#.......#...\n.#..#.................................#....#.....#.....................#...#...#.#.........#.#...#..#.....#...................#....\n...................................................................................................................................\n",
    "year": "2023",
    "day": "21",
    "silverSolved": false,
    "goldSolved": false
  },
  "aiSolver": {
    "aiModel": "gpt-4-1106-preview",
    "aiMaxTokens": 4096,
    "aiPrompt": "Please solve task below in golang, as a result needed \"main.go\" file.\nThe input data are stored in \"input.txt\" in the same directory as provided \"main.go\".\nThe program should print the answer only\n\nThe task is:\n--- Day 21: Step Counter ---\r\n\r\nYou manage to catch the 7 right as it's dropping someone else off on their all-expenses-paid trip to Desert Island! It even helpfully drops you off near the 5 and his massive farm.\r\n\r\n \"You got the sand flowing again! Great work! Now we just need to wait until we have enough sand to filter the water for Snow Island and we'll have snow again in no time.\"\r\n\r\n While you wait, one of the Elves that works with the gardener heard how good you are at solving problems and would like your help. He needs to get his https://en.wikipedia.org/wiki/Pedometer in for the day, and so he'd like to know which garden plots he can reach with exactly his remaining 64 steps.\r\n\r\n He gives you an up-to-date map (your puzzle input) of his starting position (S), garden plots (.), and rocks (#). For example:\r\n\r\n ........... .....###.#. .###.##..#. ..#.#...#.. ....#.#.... .##..S####. .##..#...#. .......##.. .##.#.####. .##..##.##. ........... \r\n\r\nThe Elf starts at the starting position (S) which also counts as a garden plot. Then, he can take one step north, south, east, or west, but only onto tiles that are garden plots. This would allow him to reach any of the tiles marked O:\r\n\r\n ........... .....###.#. .###.##..#. ..#.#...#.. ....#O#.... .##.OS####. .##..#...#. .......##.. .##.#.####. .##..##.##. ........... \r\n\r\nThen, he takes a second step. Since at this point he could be at either tile marked O, his second step would allow him to reach any garden plot that is one step north, south, east, or west of any tile that he could have reached after the first step:\r\n\r\n ........... .....###.#. .###.##..#. ..#.#O..#.. ....#.#.... .##O.O####. .##.O#...#. .......##.. .##.#.####. .##..##.##. ........... \r\n\r\nAfter two steps, he could be at any of the tiles marked O above, including the starting position (either by going north-then-south or by going west-then-east).\r\n\r\n A single third step leads to even more possibilities:\r\n\r\n ........... .....###.#. .###.##..#. ..#.#.O.#.. ...O#O#.... .##.OS####. .##O.#...#. ....O..##.. .##.#.####. .##..##.##. ........... \r\n\r\nHe will continue like this until his steps for the day have been exhausted. After a total of 6 steps, he could reach any of the garden plots marked O:\r\n\r\n ........... .....###.#. .###.##.O#. .O#O#O.O#.. O.O.#.#.O.. .##O.O####. .##.O#O..#. .O.O.O.##.. .##.#.####. .##O.##.##. ........... \r\n\r\nIn this example, if the Elf's goal was to get exactly 6 more steps today, he could use them to reach any of 16 garden plots.\r\n\r\n However, the Elf actually needs to get 64 steps today, and the map he's handed you is much larger than the example map.\r\n\r\n Starting from the garden plot marked S on your map, how many garden plots could the Elf reach in exactly 64 steps?\r\n\r\n To begin, 21/input.\r\n\r\n \n========\nFirst few Lines of input files are:\n...................................................................................................................................\n.#..#.......#....#.......#.#.....#......#..#.#.........#..............#............#......#........#...##........#..#.....#........\n..#......#.###....#........#..#....##..#................#................#...........#..........##.#.#....#....#.....#....#...##.#.\n.......#....#..#..#...#........#.....#.............##.....#.............#.#.........##......##.#.......#...#...#...........#.##.##.\n....#...#......#.#.##.....#.#..##..#..........#.#..##.....................#............#....##............#......#.........#....#..\n......#...#..##...#...#.....#......##.#......#..##.#..##.....................#.......##......##.......##.......#..#.....#.....#....\n.#...#...#....#.......#..#.#...##.....#..#..##.....#........................#....#............#....#.....#.....#.#...#...........#.\n..#..........#..###............#...###.##..#..#....##.........#...................##.#.......#......#......#.........#.............\n..................#.#.#...#..#..#..#.#............##............................#......................###...#.....##.........#....\n............#....................#...........#.....................#.#........#..#.....#...#...#......#.#.#...#.......#......##....\n...\nPlease be careful with all the requirements, I will pay 200 USD for the correct solution.",
    "aiPromptTemplate": "Please solve task below in golang, as a result needed \"main.go\" file.\nThe input data are stored in \"input.txt\" in the same directory as provided \"main.go\".\nThe program should print the answer only\n\nThe task is:\n{AOC_TASK}\n========\nFirst few Lines of input files are:\n{AOC_INPUT}\n...\nPlease be careful with all the requirements, I will pay 200 USD for the correct solution.",
    "aiResponse": "Below is the Go code to solve the given task. The code reads the garden map from \"input.txt\", implements a breadth-first search (BFS) algorithm to simulate 64 steps starting from the Elf's initial position, and then it counts and prints the number of unique garden plots the Elf can reach in exactly 64 steps.\n\nPlease create a \"main.go\" file with the following code:\n\n```go\npackage main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n)\n\nconst (\n\tempty    = '.'\n\trock     = '#'\n\tstart    = 'S'\n\tsteps    = 64\n\tfilename = \"input.txt\"\n)\n\ntype Point struct {\n\tX, Y int\n}\n\nvar directions = []Point{\n\t{X: 1, Y: 0},  // Right\n\t{X: -1, Y: 0}, // Left\n\t{X: 0, Y: 1},  // Down\n\t{X: 0, Y: -1}, // Up\n}\n\nfunc loadDataFromFile(filepath string) ([]string, Point, error) {\n\tfile, err := os.Open(filepath)\n\tif err != nil {\n\t\treturn nil, Point{}, err\n\t}\n\tdefer file.Close()\n\n\tvar data []string\n\tstartPos := Point{}\n\tscanner := bufio.NewScanner(file)\n\tfor y := 0; scanner.Scan(); y++ {\n\t\tline := scanner.Text()\n\t\tdata = append(data, line)\n\t\tif x := findStart(line); x != -1 {\n\t\t\tstartPos = Point{X: x, Y: y}\n\t\t}\n\t}\n\n\tif err := scanner.Err(); err != nil {\n\t\treturn nil, Point{}, err\n\t}\n\n\treturn data, startPos, nil\n}\n\nfunc findStart(line string) int {\n\tfor i, c := range line {\n\t\tif c == start {\n\t\t\treturn i\n\t\t}\n\t}\n\treturn -1\n}\n\nfunc validStep(grid []string, x, y int) bool {\n\tif x \u003c 0 || y \u003c 0 || y \u003e= len(grid) || x \u003e= len(grid[y]) {\n\t\treturn false\n\t}\n\treturn grid[y][x] == empty\n}\n\nfunc bfs(grid []string, startPos Point) map[Point]bool {\n\tqueue := []Point{startPos}\n\tvisited := map[Point]bool{startPos: true}\n\treached := make(map[Point]bool)\n\n\tfor len(queue) \u003e 0 {\n\t\tcurrentSize := len(queue)\n\t\tfor s := 0; s \u003c currentSize; s++ {\n\t\t\tpoint := queue[0]\n\t\t\tqueue = queue[1:]\n\n\t\t\tif _, found := reached[point]; !found \u0026\u0026 len(visited)-1 == steps { // -1 to exclude start\n\t\t\t\treached[point] = true\n\t\t\t}\n\n\t\t\tfor _, dir := range directions {\n\t\t\t\tnextX, nextY := point.X+dir.X, point.Y+dir.Y\n\t\t\t\tnextPoint := Point{X: nextX, Y: nextY}\n\t\t\t\tif validStep(grid, nextX, nextY) \u0026\u0026 !visited[nextPoint] {\n\t\t\t\t\tvisited[nextPoint] = true\n\t\t\t\t\tqueue = append(queue, nextPoint)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif len(visited)-1 == steps { // Early stop after the required steps\n\t\t\tbreak\n\t\t}\n\t}\n\n\treturn reached\n}\n\nfunc main() {\n\tgrid, startPos, err := loadDataFromFile(filename)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\treached := bfs(grid, startPos)\n\tfmt.Println(len(reached))\n}\n```\n\nThis Go code reads the map from \"input.txt\", computes the reachable garden plots in exactly 64 steps using BFS, excluding the starting position from the count, and prints the count to standard output. Don't forget to place the \"input.txt\" file in the same directory as your \"main.go\" before running the program. To run the program, use the following command:\n\n```sh\ngo run main.go\n```\n\nThis should output the number of garden plots that the Elf can reach in exactly 64 steps. Keep in mind that your environment needs to have Go installed to compile and execute the Go code.",
    "aiResponseCode": "\npackage main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n)\n\nconst (\n\tempty    = '.'\n\trock     = '#'\n\tstart    = 'S'\n\tsteps    = 64\n\tfilename = \"input.txt\"\n)\n\ntype Point struct {\n\tX, Y int\n}\n\nvar directions = []Point{\n\t{X: 1, Y: 0},  // Right\n\t{X: -1, Y: 0}, // Left\n\t{X: 0, Y: 1},  // Down\n\t{X: 0, Y: -1}, // Up\n}\n\nfunc loadDataFromFile(filepath string) ([]string, Point, error) {\n\tfile, err := os.Open(filepath)\n\tif err != nil {\n\t\treturn nil, Point{}, err\n\t}\n\tdefer file.Close()\n\n\tvar data []string\n\tstartPos := Point{}\n\tscanner := bufio.NewScanner(file)\n\tfor y := 0; scanner.Scan(); y++ {\n\t\tline := scanner.Text()\n\t\tdata = append(data, line)\n\t\tif x := findStart(line); x != -1 {\n\t\t\tstartPos = Point{X: x, Y: y}\n\t\t}\n\t}\n\n\tif err := scanner.Err(); err != nil {\n\t\treturn nil, Point{}, err\n\t}\n\n\treturn data, startPos, nil\n}\n\nfunc findStart(line string) int {\n\tfor i, c := range line {\n\t\tif c == start {\n\t\t\treturn i\n\t\t}\n\t}\n\treturn -1\n}\n\nfunc validStep(grid []string, x, y int) bool {\n\tif x \u003c 0 || y \u003c 0 || y \u003e= len(grid) || x \u003e= len(grid[y]) {\n\t\treturn false\n\t}\n\treturn grid[y][x] == empty\n}\n\nfunc bfs(grid []string, startPos Point) map[Point]bool {\n\tqueue := []Point{startPos}\n\tvisited := map[Point]bool{startPos: true}\n\treached := make(map[Point]bool)\n\n\tfor len(queue) \u003e 0 {\n\t\tcurrentSize := len(queue)\n\t\tfor s := 0; s \u003c currentSize; s++ {\n\t\t\tpoint := queue[0]\n\t\t\tqueue = queue[1:]\n\n\t\t\tif _, found := reached[point]; !found \u0026\u0026 len(visited)-1 == steps { // -1 to exclude start\n\t\t\t\treached[point] = true\n\t\t\t}\n\n\t\t\tfor _, dir := range directions {\n\t\t\t\tnextX, nextY := point.X+dir.X, point.Y+dir.Y\n\t\t\t\tnextPoint := Point{X: nextX, Y: nextY}\n\t\t\t\tif validStep(grid, nextX, nextY) \u0026\u0026 !visited[nextPoint] {\n\t\t\t\t\tvisited[nextPoint] = true\n\t\t\t\t\tqueue = append(queue, nextPoint)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif len(visited)-1 == steps { // Early stop after the required steps\n\t\t\tbreak\n\t\t}\n\t}\n\n\treturn reached\n}\n\nfunc main() {\n\tgrid, startPos, err := loadDataFromFile(filename)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\treached := bfs(grid, startPos)\n\tfmt.Println(len(reached))\n}\n",
    "aiResponseCodeOutput": "0\n",
    "aiAnswerFound": true,
    "aiAnswer": "0"
  },
  "aocSolve": {
    "level": "1",
    "answer": "0",
    "attemptAllowSubmit": true
  }
}