{
  "aocTask": {
    "text": "/\r\n/2023/about\r\n/2023/events\r\nhttps://teespring.com/stores/advent-of-code\r\n/2023/settings\r\n/2023/auth/logout\r\nllljjjiii /2023/support 41*\r\n\r\n   int y=/2023;\r\n\r\n\r\n/2023\r\n/2023/support\r\n/2023/sponsors\r\n/2023/leaderboard\r\n/2023/stats\r\n Our /2023/sponsors help make Advent of Code possible:https://developer.ansys.com/ - Make this holiday season unforgettable with Ansys. Join the Ansys developer community, search jobs, and SHINE in your favorite language. \r\n\r\n--- Day 24: Never Tell Me The Odds ---\r\n\r\nIt seems like something is going wrong with the snow-making process. Instead of forming snow, the water that's been absorbed into the air seems to be forming https://en.wikipedia.org/wiki/Hail!\r\n\r\n Maybe there's something you can do to break up the hailstones?\r\n\r\n Due to strong, probably-magical winds, the hailstones are all flying through the air in perfectly linear trajectories. You make a note of each hailstone's position and velocity (your puzzle input). For example:\r\n\r\n 19, 13, 30 @ -2, 1, -2 18, 19, 22 @ -1, -1, -2 20, 25, 34 @ -2, -2, -4 12, 31, 28 @ -1, -2, -1 20, 19, 15 @ 1, -5, -3 \r\n\r\nEach line of text corresponds to the position and velocity of a single hailstone. The positions indicate where the hailstones are right now (at time 0). The velocities are constant and indicate exactly how far each hailstone will move in one nanosecond.\r\n\r\n Each line of text uses the format px py pz @ vx vy vz. For instance, the hailstone specified by 20, 19, 15 @ 1, -5, -3 has initial X position 20, Y position 19, Z position 15, X velocity 1, Y velocity -5, and Z velocity -3. After one nanosecond, the hailstone would be at 21, 14, 12.\r\n\r\n Perhaps you won't have to do anything. How likely are the hailstones to collide with each other and smash into tiny ice crystals?\r\n\r\n To estimate this, consider only the X and Y axes; ignore the Z axis. Looking forward in time, how many of the hailstones' paths will intersect within a test area? (The hailstones themselves don't have to collide, just test for intersections between the paths they will trace.)\r\n\r\n In this example, look for intersections that happen with an X and Y position each at least 7 and at most 27; in your actual data, you'll need to check a much larger test area. Comparing all pairs of hailstones' future paths produces the following results:\r\n\r\n Hailstone A: 19, 13, 30 @ -2, 1, -2 Hailstone B: 18, 19, 22 @ -1, -1, -2 Hailstones' paths will cross inside the test area (at x=14.333, y=15.333). Hailstone A: 19, 13, 30 @ -2, 1, -2 Hailstone B: 20, 25, 34 @ -2, -2, -4 Hailstones' paths will cross inside the test area (at x=11.667, y=16.667). Hailstone A: 19, 13, 30 @ -2, 1, -2 Hailstone B: 12, 31, 28 @ -1, -2, -1 Hailstones' paths will cross outside the test area (at x=6.2, y=19.4). Hailstone A: 19, 13, 30 @ -2, 1, -2 Hailstone B: 20, 19, 15 @ 1, -5, -3 Hailstones' paths crossed in the past for hailstone A. Hailstone A: 18, 19, 22 @ -1, -1, -2 Hailstone B: 20, 25, 34 @ -2, -2, -4 Hailstones' paths are parallel; they never intersect. Hailstone A: 18, 19, 22 @ -1, -1, -2 Hailstone B: 12, 31, 28 @ -1, -2, -1 Hailstones' paths will cross outside the test area (at x=-6, y=-5). Hailstone A: 18, 19, 22 @ -1, -1, -2 Hailstone B: 20, 19, 15 @ 1, -5, -3 Hailstones' paths crossed in the past for both hailstones. Hailstone A: 20, 25, 34 @ -2, -2, -4 Hailstone B: 12, 31, 28 @ -1, -2, -1 Hailstones' paths will cross outside the test area (at x=-2, y=3). Hailstone A: 20, 25, 34 @ -2, -2, -4 Hailstone B: 20, 19, 15 @ 1, -5, -3 Hailstones' paths crossed in the past for hailstone B. Hailstone A: 12, 31, 28 @ -1, -2, -1 Hailstone B: 20, 19, 15 @ 1, -5, -3 Hailstones' paths crossed in the past for both hailstones. \r\n\r\nSo, in this example, 2 hailstones' future paths cross inside the boundaries of the test area.\r\n\r\n However, you'll need to search a much larger test area if you want to see if any hailstones might collide. Look for intersections that happen with an X and Y position each at least 200000000000000 and at most 400000000000000. Disregard the Z axis entirely.\r\n\r\n Considering only the X and Y axes, check all pairs of hailstones' future paths for intersections. How many of these intersections occur within the test area?\r\n\r\n To begin, 24/input.\r\n\r\n Answer: \r\n\r\n You can also [Shareon https://twitter.com/intent/tweet?text=%22Never+Tell+Me+The+Odds%22+%2D+Day+24+%2D+Advent+of+Code+2023\u0026url=https%3A%2F%2Fadventofcode%2Ecom%2F2023%2Fday%2F24\u0026related=ericwastl\u0026hashtags=AdventOfCode https://] this puzzle.\r\n\r\n ",
    "input": "288998070705911, 281498310692304, 225433163951734 @ -63, 25, 66\n267942038821112, 319206560980050, 228821793591214 @ 97, -61, 70\n444805588706877, 248504563833176, 237588696365934 @ -167, 337, 94\n394123042863727, 301207059897078, 223821779603118 @ 55, -100, 150\n424620891492545, 267086986001496, 243127954482382 @ -159, 86, 38\n420867454565189, 397096302024900, 185373676874602 @ -103, -648, 369\n81469624308455, 459809787064806, 324360582833494 @ 57, -158, -46\n374351916393457, 251260699530984, 272569599921454 @ -185, 77, -13\n274270181527553, 222998389305870, 192244232511682 @ 216, 194, 188\n420909415882706, 308576121555582, 306893944197334 @ -229, -49, -130\n255271115140772, 383299865656770, 526422353795035 @ -79, -101, -315\n289681549037104, 161819934078320, 200989619113147 @ 239, 421, 179\n365086463005105, 372118714233220, 71077692961746 @ 16, -311, 666\n261038668734690, 306445753317928, 277042740696425 @ 131, -35, -41\n438179998038104, 279901072723140, 266160038407507 @ -35, 17, -259\n409853164949808, 283630297416922, 242168581023471 @ 41, -5, 45\n370770040636233, 195688704324883, 483289364120658 @ -8, 330, -830\n448114866360209, 278579433956404, 223519614403834 @ -96, 36, 389\n441842816549699, 265398440832240, 215712428346754 @ -191, 129, 240\n377614468598480, 353651317608841, 213428626621665 @ -45, -230, 141\n155243887484345, 160800080687232, 318491731769632 @ 172, 225, -87\n192363458306495, 266153396803486, 230310867812228 @ -63, 42, 51\n154198821719384, 281642861357643, 300138682674446 @ 9, 26, -26\n401628395673753, 305312019110912, 208398332077934 @ 71, -150, 274\n162061078509944, 378452509193094, 291853844630686 @ -41, -69, -10\n96849558549729, 43756579183290, 37999549578007 @ 64, 287, 263\n402178285015309, 361020004734012, 445413566646318 @ -106, -289, -746\n371869863945721, 398415925875047, 206228332687897 @ -8, -408, 173\n169726839216270, 422130176146329, 236869607261718 @ 37, -154, 46\n337930748325354, 282052566517390, 245901829221757 @ 65, 19, 29\n56259461745443, 216429925351065, 196431004417526 @ 150, 104, 94\n397790576142248, 354727035189891, 249140379221767 @ -177, -160, 23\n394416633005907, 334320395351318, 515469113809718 @ -199, -84, -518\n332950116217841, 270371708297208, 260734970319838 @ -22, 50, -5\n377251051738595, 371826982533978, 111637729535626 @ 37, -382, 620\n326331375676049, 303379952017360, 445914308537902 @ -48, -23, -394\n337714586487335, 167833169406491, 305755822018593 @ 6, 336, -135\n184366366583048, 332023430286206, 294351489335894 @ -33, -29, -18\n199123322155967, 325772636484311, 290697355903064 @ 6, -32, -24\n233078936920859, 322033366231404, 225797769957916 @ 99, -53, 71\n413376459307183, 205525109792909, 235614753416921 @ -22, 508, 87\n322460323968538, 101297647815098, 183799039394989 @ 107, 595, 227\n233018232482549, 94151034586215, 235660502002082 @ 276, 524, 58\n295272941157665, 178187206504824, 195176936665310 @ 243, 380, 205\n165034701468909, 351657760393712, 336856285247738 @ -26, -47, -60\n433237329416029, 270125008524992, 243539371921854 @ -61, 115, 34\n353217020314203, 339868101887708, 509073250088122 @ -55, -129, -652\n256553285603104, 275776161508290, 246854663441957 @ 49, 35, 31\n225726695188752, 428339000315733, 507106276700169 @ -85, -130, -243\n425519093534540, 280071498300710, 248633028617732 @ -9, 19, -12\n137762848464413, 330136823896224, 264300233277934 @ 31, -29, 14\n285898355383463, 313187470458996, 186565180078018 @ 167, -69, 200\n136474149638269, 255250755160074, 343277918472994 @ 34, 56, -76\n433027514158188, 288226744462803, 248391318574259 @ -179, -22, 9\n113585535083489, 434328285131496, 434897740903798 @ 94, -163, -199\n310240824330179, 367722269849376, 203122414411501 @ 114, -235, 157\n251671910258189, 302073276294360, 244411442972422 @ -9, -7, 36\n185455577741909, 294567472210240, 297717415060482 @ 18, 9, -32\n268973436695519, 339083292584808, 237022747307029 @ 74, -99, 51\n372408256616361, 289591631416367, 219554187097305 @ 8, -12, 129\n89623537310195, 327931942381954, 372302867346870 @ 21, -18, -86\n384285126899999, 312935235075720, 268928102333962 @ 137, -179, -120\n350212594951181, 195703937342982, 182295918190036 @ 180, 415, 320\n299590105860959, 260734878460265, 218327531664192 @ -114, 54, 72\n426948627245063, 299197245361948, 202674430705766 @ -42, -143, 382\n384599460236679, 227112403826640, 365858742980282 @ -158, 149, -246\n226922427208622, 114480932652519, 395033605240685 @ -75, 212, -131\n348637262398866, 237811980845223, 286693387089069 @ 133, 200, -143\n416996491180605, 269460121159264, 249180003227894 @ -130, 73, 10\n303046299667409, 217065804289140, 274080294074632 @ -80, 129, -12\n424289019991568, 272223517188537, 212308478859072 @ 111, 110, 408\n257918853546389, 482573908306980, 371861336850552 @ 42, -349, -201\n262709625984931, 356080063608071, 530198560043095 @ -122, -54, -271\n262534674262848, 385847217840304, 181955086785673 @ -53, -123, 125\n361416969649937, 245949635107910, 238609312074440 @ -48, 124, 51\n256528401174709, 328451764178300, 126493507107112 @ -46, -41, 203\n189157277520507, 183395944457142, 254794330136978 @ 271, 242, 12\n417101084321169, 403349826837608, 301708404147108 @ -16, -867, -384\n443916657000129, 261364862094040, 207309621330782 @ -104, 261, 510\n445989187148905, 280039274154660, 261724912332130 @ -118, 14, -223\n384018329764564, 366391998973210, 165256688575202 @ -125, -209, 250\n287572769657334, 325843105584465, 252502478904547 @ -169, -16, 29\n420392475928145, 296847926016516, 280401837954130 @ 16, -124, -281\n197076619551025, 286657857276800, 255427752567438 @ 8, 19, 22\n146802707877329, 93413280056040, 407764492808782 @ 10, 233, -143\n151253379361137, 314337922740008, 240716538168766 @ 50, -15, 41\n406339919528789, 279120844124460, 232452348274162 @ 31, 28, 109\n313819760965255, 400212924238997, 279066267543123 @ 38, -278, -53\n138619371723854, 178622195559045, 262005355179187 @ -11, 130, 19\n231629645330330, 328795122575601, 92779920701026 @ -73, -28, 210\n374860856326796, 417582784529127, 317146463503720 @ 41, -574, -284\n207124700280949, 532533971152424, 327371086901978 @ -31, -275, -63\n209160583480565, 325505264093344, 427477277706594 @ -54, -23, -168\n310643493503756, 241087498526426, 224186462008775 @ -105, 87, 67\n405433976783529, 400962539445375, 373252814185566 @ -136, -406, -426\n413196365017666, 251261427347952, 237850039029870 @ -43, 197, 70\n408082212401669, 205295829406800, 171788060579632 @ -130, 313, 313\n248189807453343, 410797193082636, 389129579103098 @ -35, -157, -168\n195032020876999, 491259332670730, 88653940811308 @ -41, -206, 209\n281652546217502, 167575749529820, 106505589615991 @ 213, 369, 455\n268421242815429, 226857442494990, 357049485924082 @ 142, 158, -244\n119848610733977, 283837629736400, 296666563372742 @ 15, 24, -17\n309730936985157, 224439545814464, 309053416428550 @ 37, 163, -124\n445603576393646, 362945287528665, 272920754529730 @ -227, -546, -166\n403477765747274, 274809586510740, 276623175033727 @ -57, 49, -123\n153537240761625, 238619502609236, 18315346809274 @ 38, 78, 311\n146910070344538, 323256072874488, 294794475450038 @ 5, -19, -18\n155839441870315, 200843108385626, 368283458264152 @ 67, 132, -127\n154655357149869, 315462765998272, 295378268097196 @ 34, -15, -25\n80102417227421, 39742409350404, 268107592744246 @ 61, 278, 12\n204185255928437, 343761010402866, 224877101826262 @ -54, -42, 58\n257502287888348, 183362789184792, 201299588231011 @ -97, 141, 87\n351397823453381, 452207199118012, 331356318955538 @ -165, -240, -99\n275114894740499, 337437744024690, 280959711309532 @ -65, -56, -17\n375868255185737, 451900765149389, 150336096022224 @ -72, -504, 324\n215671424673859, 368816310409340, 103458532609612 @ -35, -81, 209\n270013128245705, 283938881236551, 273841686107650 @ 88, 18, -30\n230890102501073, 470863661060178, 342227717555242 @ -80, -184, -72\n33523665581441, 215907885935728, 316528682764214 @ 78, 90, -33\n326572358064713, 550615366176711, 208227113021602 @ -104, -438, 98\n402584119498609, 405542595169160, 303998512015342 @ -214, -233, -88\n205447425444443, 323312449349880, 134490138085594 @ 126, -51, 234\n269103462793615, 315741618389311, 328255650383045 @ 46, -44, -131\n216605064599537, 223666596491016, 262220963083526 @ 36, 113, 9\n318050145292909, 285238683462870, 235466821162212 @ 76, 11, 60\n273607847151891, 330459917791338, 273493518310768 @ 91, -88, -31\n166752538574807, 251389689105928, 457741010656141 @ 6, 61, -211\n216819293208617, 374132755484628, 223258908677890 @ 132, -153, 76\n161405882124914, 286492197665490, 341662410395617 @ 63, 19, -93\n367169124031360, 488040782317508, 237018757438243 @ -197, -279, 47\n262925689795790, 288427463882399, 415535981934373 @ -63, 16, -199\n65854129080671, 192592225528071, 24860313437127 @ 90, 122, 273\n487162771555542, 513199853566202, 424690365619220 @ -373, -309, -224\n179298015484801, 313295055987888, 270778304563304 @ -40, -7, 9\n376931326311862, 223237851940653, 393551950270444 @ 133, 338, -796\n233384058626369, 343609645737092, 371455703093647 @ -96, -39, -97\n357775768737569, 355500376300584, 388912010888638 @ 49, -255, -503\n219401421157856, 212027507445887, 261271377891773 @ 51, 136, 9\n168018764782633, 9285317838612, 130182885113866 @ 46, 380, 185\n250927284186341, 349168814871436, 335443568375374 @ 102, -117, -154\n376260750279269, 189191788321500, 240304725075082 @ -34, 347, 48\n152397991843913, 309966685646608, 292554330920358 @ 33, -8, -21\n420341618775945, 275213124020740, 247035608313398 @ -62, 54, 12\n390767731877698, 140931229637055, 234830512994937 @ 133, 944, 93\n435311212837574, 278258577989779, 243257391843084 @ 69, 40, 36\n447354974048549, 312671495291750, 316862333842387 @ -204, -285, -649\n200826487865329, 276980439271240, 289893993238782 @ -74, 31, -9\n401782586155504, 305991205802751, 269413419061041 @ -11, -118, -105\n425149050784757, 202694136998108, 192788635279214 @ -99, 526, 366\n144016749529449, 294333654224460, 295362735035170 @ -26, 14, -13\n348083848604073, 315642389651115, 193254162081016 @ -104, -46, 140\n207018093024029, 139195168976700, 278677745452702 @ -21, 202, -6\n399520321930421, 235582800925228, 239295603973374 @ 117, 346, 66\n269766378606599, 218137577338716, 312336405664868 @ 99, 167, -119\n372896207514554, 205365780551715, 250137926189232 @ -159, 176, 24\n266028489730091, 271228155210288, 197319178924216 @ -33, 41, 109\n156279761161893, 324245689376764, 232174275634852 @ 82, -33, 53\n277015789336833, 262508937982824, 282224125023070 @ -67, 53, -19\n103392960514454, 226878946329600, 169331610194992 @ 159, 101, 140\n326074279780079, 293746628775420, 272680245085942 @ -6, -7, -34\n87618291873094, 343668476644451, 92726126202185 @ 109, -48, 217\n365694379939979, 189146260598790, 287693700021832 @ 79, 418, -155\n450036251223179, 228456665118490, 256713578000882 @ -150, 847, -182\n304429706709065, 183064330116731, 323097180278499 @ 216, 366, -243\n114700182015153, 322947925087592, 259119751432910 @ 11, -15, 22\n381341578648991, 297124604167392, 287756834521189 @ -230, 5, -21\n300519590357168, 477165281799285, 77720937608140 @ -7, -376, 376\n227732345824241, 410082405109488, 95692861879822 @ 108, -220, 318\n352018349367755, 317579771514336, 202854472991656 @ -7, -87, 159\n221907755623745, 189305813334060, 180171909490762 @ 292, 264, 203\n220859665006881, 365949091024153, 301985658839872 @ 32, -104, -52\n31949340455546, 244722071566245, 188330495430550 @ 103, 64, 94\n310031437489229, 359488903015440, 479702692311382 @ 29, -165, -532\n209737896308826, 329725437962241, 238151978552127 @ -83, -22, 43\n313206542286155, 272521973208702, 296558468106154 @ -14, 43, -78\n298253829554813, 328232515446675, 232337223669241 @ 12, -76, 61\n366413595076557, 331465535946170, 314459466959761 @ -28, -141, -193\n228261362654459, 297976928458662, 383948433235045 @ -66, 7, -125\n253491636095159, 170992673906887, 553192673697003 @ -126, 138, -275\n212800128253125, 340123243525429, 266252947779277 @ 148, -90, -7\n415941686699957, 292926338791323, 266430391801816 @ 20, -80, -144\n384544181981657, 438628757484456, 158309496414136 @ -120, -419, 276\n310168661529236, 225398584725871, 177593398732684 @ -45, 132, 164\n365749336698116, 283910062127706, 220351008466411 @ 13, 11, 121\n62743923084461, 97531183132484, 142220536110830 @ 75, 216, 142\n326720261585561, 218488970235192, 200073317939758 @ -73, 147, 122\n386398446427464, 309504686138109, 299349660975690 @ -181, -34, -78\n133620200194889, 223581618915390, 124226525230672 @ 108, 104, 199\n153459159122214, 496724688318678, 44785946193297 @ 29, -229, 273\n11365561855318, 336994841944562, 75606016316333 @ 145, -33, 217\n226914016311581, 263186441377312, 504999561989642 @ -9, 51, -327\n384819141831641, 289587584295268, 259595294532254 @ 18, -20, -38\n239018855976326, 194862660572010, 178900162448410 @ -45, 139, 122\n268595855121289, 374925993989022, 277143929109528 @ 44, -160, -29\n354665699224183, 306788518543059, 282426448469339 @ -94, -34, -51\n387565071385089, 371730370212680, 167290479513302 @ 136, -563, 522\n103158999034929, 249359958273540, 359292322575082 @ 136, 68, -115\n325165491295904, 260199289407555, 243127954482382 @ 49, 82, 38\n267860216638320, 179692459043026, 439586580292259 @ -59, 171, -243\n376001561959931, 524734562478009, 242264108861980 @ -138, -540, 40\n214450515415318, 159763352555501, 376986241155823 @ 35, 208, -163\n394297041542341, 303373087009460, 226282286235074 @ 91, -126, 145\n51177343578193, 220602453954456, 154691546119982 @ 128, 95, 138\n324530472000999, 365417037154011, 267219616983469 @ -46, -154, -13\n423037264784145, 337263959949304, 326464987599290 @ -64, -383, -551\n95178319642971, 283655188828330, 292785831242096 @ 55, 24, -15\n395376589776529, 217517563318640, 253407352035582 @ -40, 304, -8\n166739299304221, 85448833088192, 148617381038326 @ 188, 373, 206\n380222368220773, 273298396718364, 268652344881124 @ -164, 41, -16\n207005398682969, 380148798612352, 309742248921534 @ 69, -132, -68\n58553021741579, 327500114380600, 321988604706192 @ 129, -27, -53\n220852862434025, 308354540071662, 298397965702471 @ 8, -13, -41\n293937416850209, 274082591679029, 548272056517383 @ -96, 36, -399\n123213451504129, 256367954091865, 186986187953457 @ 128, 60, 115\n418340047469993, 317867454827448, 247742849388766 @ -74, -207, 10\n361434379917737, 254411878758429, 381212184767908 @ -120, 82, -260\n446195869531869, 368142316770280, 440281304661672 @ -314, -99, -245\n78615637058877, 268918041816052, 426813479316490 @ 83, 40, -163\n368533255347904, 245120922788415, 329502695541232 @ -97, 116, -184\n155401481772789, 322077289526454, 379945208476096 @ 154, -40, -181\n108268069857939, 321282268895470, 262807854678582 @ 23, -14, 18\n354525454537049, 170376692110920, 238736293802272 @ -68, 301, 49\n389090953960966, 319163588353416, 239359850899903 @ -163, -67, 47\n265578640984837, 262987165619676, 301141478544918 @ -5, 56, -60\n165942069580161, 413871915978094, 126270662631390 @ 8, -128, 174\n393651885342863, 264245485483098, 267838870650418 @ 65, 116, -108\n81818773301104, 87032447939390, 186381057020082 @ 119, 259, 106\n440552337076289, 276640489995480, 280757349154666 @ -156, 49, -285\n440979513830057, 285700009791636, 240707686245208 @ 12, -85, 79\n420839543832197, 280819698680346, 238240742864659 @ -28, 15, 75\n364965221248307, 136538807912559, 211877122713706 @ 146, 740, 194\n380701557527123, 364922678666094, 236927422988399 @ 42, -373, 67\n63418462476551, 279832180044859, 324989128748187 @ 126, 28, -57\n242881463444648, 341439287740806, 399299965150297 @ -105, -37, -127\n153170474236229, 299175872349140, 149128971452882 @ 15, 6, 145\n143447577842385, 335373264673576, 296756828410190 @ 8, -32, -20\n251536485818501, 225055212410622, 153269169377352 @ -114, 86, 133\n388389713136849, 480085037891560, 454790475041102 @ -232, -257, -263\n405427081499839, 405027105675640, 280944941142982 @ -247, -171, -22\n317162399922845, 189695295480567, 323538939412313 @ -108, 170, -89\n258255091812029, 219345442080448, 293944751124307 @ -36, 117, -37\n293720206437644, 320224149000930, 269329606911877 @ -35, -45, -9\n198941221003196, 314185435774866, 244659039365044 @ 7, -17, 36\n178474297801457, 317677899621096, 401183237084494 @ 15, -19, -158\n375582710814995, 280134976259070, 242429258811124 @ 33, 24, 41\n232781439983047, 559973301504001, 284786054190387 @ -34, -342, -17\n410822806336616, 306363662268176, 264556489507140 @ 123, -219, -156\n181161892543121, 283147174510312, 257224286731150 @ 201, 21, 11\n251093231161042, 427356568367407, 163506152832068 @ 71, -258, 192\n270953887148869, 460511950909354, 416143993889347 @ 44, -333, -307\n39447330567149, 74059903971081, 207728120149714 @ 284, 330, 90\n173664035524121, 207868807180768, 349435315153278 @ 81, 132, -116\n439565170280267, 274234636628658, 277283455970434 @ -30, 95, -438\n426622481349041, 366462335751962, 373275114242656 @ -192, -332, -499\n116494455898194, 338830732193328, 396935537998247 @ 79, -43, -147\n277839892810141, 531368581630412, 318450947126026 @ -58, -353, -76\n427825477640039, 261829067445189, 221737811404144 @ -106, 146, 184\n210659546579298, 215600148300671, 340540205244136 @ 143, 150, -148\n303555295160593, 281304970910376, 162199056675534 @ -133, 26, 142\n443954223882777, 289603779616532, 232841396257193 @ -184, -63, 127\n357795871607095, 296706086704194, 270000080589282 @ 50, -37, -62\n232171886534329, 287980677438995, 242308845940077 @ -56, 18, 39\n394770859803623, 444163388030670, 342243697216600 @ -138, -461, -256\n421564395423654, 325321627702687, 261851076781800 @ -161, -174, -44\n340349283486506, 312703624909116, 248010382848043 @ -63, -47, 27\n198014790887192, 328316454914190, 372414399656623 @ -69, -21, -93\n138455191657151, 259919844453144, 309805191054118 @ 71, 53, -46\n325924283150545, 167208073343336, 431164236929102 @ -80, 240, -317\n425681908657542, 248533184563843, 259697371640378 @ -137, 198, -54\n224278690577880, 30214208568755, 160483307778445 @ 241, 634, 239\n202195116776023, 265185650963144, 228481569939980 @ -35, 45, 55\n422977125566351, 268885192594154, 376447210629012 @ -57, 102, -927\n149270678526521, 178414883520912, 291641621126242 @ 18, 143, -17\n274625988201485, 294732821199516, 339953743369906 @ -87, 8, -91\n159235849368929, 337102489052640, 210574031358142 @ 184, -71, 94\n151254591269549, 348973518041520, 215838635922022 @ 187, -89, 84\n413003238699281, 405800955620776, 312927274724430 @ -108, -567, -290\n437477309342711, 296364716394036, 202370879306160 @ -54, -175, 516\n379757693919014, 296871605515335, 277962570347302 @ -167, -8, -34\n145092640710969, 255238260648483, 238813004877808 @ 104, 62, 44\n209954403842953, 396160487139840, 555634630925582 @ -14, -121, -362\n394187952755429, 462504616746732, 315079491006634 @ -161, -448, -149\n386760154018604, 439260478103892, 376503584342629 @ 39, -775, -631\n435811850289629, 274382160922176, 258158666288902 @ -11, 87, -152\n123912262092455, 20971562730090, 94962859998229 @ 122, 379, 239\n212539300302753, 49972761162040, 210651913863646 @ -37, 304, 77\n409680266438789, 267146866715180, 306429779589214 @ -51, 94, -310\n161020385304074, 409300517998587, 157366740054049 @ 109, -164, 165\n404756352263629, 271351898652795, 240737810224862 @ 44, 80, 54\n96210228223541, 299931010941618, 272073444795304 @ 30, 8, 9\n224051507513621, 255896400474504, 525785471221798 @ -89, 53, -256\n366625381866317, 358165015815768, 276580817282074 @ -58, -203, -60\n358752778395941, 399664896245298, 278977780058122 @ -164, -173, -22\n416302507248674, 511306548940095, 360075638442007 @ -249, -418, -187\n304925777380077, 295505517740684, 459056049028486 @ -175, 12, -184\n177784853567699, 178086065762696, 214303835136398 @ -21, 141, 70\n194524154753033, 377216546280000, 313633952496358 @ 126, -141, -84\n163468715889459, 115088942683170, 223481337019197 @ 286, 371, 79\n311065753341104, 31758839256330, 244516783944277 @ -11, 563, 35\n228583441747409, 396559800042840, 396554015148862 @ 80, -181, -236\n",
    "year": "2023",
    "day": "24",
    "silverSolved": false,
    "goldSolved": false
  },
  "aiSolver": {
    "aiModel": "gpt-4-1106-preview",
    "aiMaxTokens": 4096,
    "aiPrompt": "Please solve task below in golang, as a result needed \"main.go\" file.\nThe input data are stored in \"input.txt\" in the same directory as provided \"main.go\".\nThe program should print the answer only\n\nThe task is:\n--- Day 24: Never Tell Me The Odds ---\r\n\r\nIt seems like something is going wrong with the snow-making process. Instead of forming snow, the water that's been absorbed into the air seems to be forming https://en.wikipedia.org/wiki/Hail!\r\n\r\n Maybe there's something you can do to break up the hailstones?\r\n\r\n Due to strong, probably-magical winds, the hailstones are all flying through the air in perfectly linear trajectories. You make a note of each hailstone's position and velocity (your puzzle input). For example:\r\n\r\n 19, 13, 30 @ -2, 1, -2 18, 19, 22 @ -1, -1, -2 20, 25, 34 @ -2, -2, -4 12, 31, 28 @ -1, -2, -1 20, 19, 15 @ 1, -5, -3 \r\n\r\nEach line of text corresponds to the position and velocity of a single hailstone. The positions indicate where the hailstones are right now (at time 0). The velocities are constant and indicate exactly how far each hailstone will move in one nanosecond.\r\n\r\n Each line of text uses the format px py pz @ vx vy vz. For instance, the hailstone specified by 20, 19, 15 @ 1, -5, -3 has initial X position 20, Y position 19, Z position 15, X velocity 1, Y velocity -5, and Z velocity -3. After one nanosecond, the hailstone would be at 21, 14, 12.\r\n\r\n Perhaps you won't have to do anything. How likely are the hailstones to collide with each other and smash into tiny ice crystals?\r\n\r\n To estimate this, consider only the X and Y axes; ignore the Z axis. Looking forward in time, how many of the hailstones' paths will intersect within a test area? (The hailstones themselves don't have to collide, just test for intersections between the paths they will trace.)\r\n\r\n In this example, look for intersections that happen with an X and Y position each at least 7 and at most 27; in your actual data, you'll need to check a much larger test area. Comparing all pairs of hailstones' future paths produces the following results:\r\n\r\n Hailstone A: 19, 13, 30 @ -2, 1, -2 Hailstone B: 18, 19, 22 @ -1, -1, -2 Hailstones' paths will cross inside the test area (at x=14.333, y=15.333). Hailstone A: 19, 13, 30 @ -2, 1, -2 Hailstone B: 20, 25, 34 @ -2, -2, -4 Hailstones' paths will cross inside the test area (at x=11.667, y=16.667). Hailstone A: 19, 13, 30 @ -2, 1, -2 Hailstone B: 12, 31, 28 @ -1, -2, -1 Hailstones' paths will cross outside the test area (at x=6.2, y=19.4). Hailstone A: 19, 13, 30 @ -2, 1, -2 Hailstone B: 20, 19, 15 @ 1, -5, -3 Hailstones' paths crossed in the past for hailstone A. Hailstone A: 18, 19, 22 @ -1, -1, -2 Hailstone B: 20, 25, 34 @ -2, -2, -4 Hailstones' paths are parallel; they never intersect. Hailstone A: 18, 19, 22 @ -1, -1, -2 Hailstone B: 12, 31, 28 @ -1, -2, -1 Hailstones' paths will cross outside the test area (at x=-6, y=-5). Hailstone A: 18, 19, 22 @ -1, -1, -2 Hailstone B: 20, 19, 15 @ 1, -5, -3 Hailstones' paths crossed in the past for both hailstones. Hailstone A: 20, 25, 34 @ -2, -2, -4 Hailstone B: 12, 31, 28 @ -1, -2, -1 Hailstones' paths will cross outside the test area (at x=-2, y=3). Hailstone A: 20, 25, 34 @ -2, -2, -4 Hailstone B: 20, 19, 15 @ 1, -5, -3 Hailstones' paths crossed in the past for hailstone B. Hailstone A: 12, 31, 28 @ -1, -2, -1 Hailstone B: 20, 19, 15 @ 1, -5, -3 Hailstones' paths crossed in the past for both hailstones. \r\n\r\nSo, in this example, 2 hailstones' future paths cross inside the boundaries of the test area.\r\n\r\n However, you'll need to search a much larger test area if you want to see if any hailstones might collide. Look for intersections that happen with an X and Y position each at least 200000000000000 and at most 400000000000000. Disregard the Z axis entirely.\r\n\r\n Considering only the X and Y axes, check all pairs of hailstones' future paths for intersections. How many of these intersections occur within the test area?\r\n\r\n To begin, 24/input.\r\n\r\n \n========\nFirst few Lines of input files are:\n288998070705911, 281498310692304, 225433163951734 @ -63, 25, 66\n267942038821112, 319206560980050, 228821793591214 @ 97, -61, 70\n444805588706877, 248504563833176, 237588696365934 @ -167, 337, 94\n394123042863727, 301207059897078, 223821779603118 @ 55, -100, 150\n424620891492545, 267086986001496, 243127954482382 @ -159, 86, 38\n420867454565189, 397096302024900, 185373676874602 @ -103, -648, 369\n81469624308455, 459809787064806, 324360582833494 @ 57, -158, -46\n374351916393457, 251260699530984, 272569599921454 @ -185, 77, -13\n274270181527553, 222998389305870, 192244232511682 @ 216, 194, 188\n420909415882706, 308576121555582, 306893944197334 @ -229, -49, -130\n...\nPlease be careful with all the requirements, I will pay 200 USD for the correct solution.",
    "aiPromptTemplate": "Please solve task below in golang, as a result needed \"main.go\" file.\nThe input data are stored in \"input.txt\" in the same directory as provided \"main.go\".\nThe program should print the answer only\n\nThe task is:\n{AOC_TASK}\n========\nFirst few Lines of input files are:\n{AOC_INPUT}\n...\nPlease be careful with all the requirements, I will pay 200 USD for the correct solution.",
    "aiResponse": "In order to solve the task, we need to write a Go program that reads in pairs of hailstones, calculates whether the paths intersect within a given range, and outputs the total number of intersections within the test area.\n\nHere is a \"main.go\" Go source code file that accomplishes the task as described:\n\n```go\npackage main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n\t\"strconv\"\n\t\"strings\"\n)\n\ntype Hailstone struct {\n\tpx, py, vx, vy int\n}\n\n// isIntersectionInRange checks if the hailstones intersect within the given range.\nfunc isIntersectionInRange(a, b Hailstone, minX, maxX, minY, maxY int) bool {\n\t// Time at which the two hailstones intersect can be found by solving two equations:\n\t// a.px + t * a.vx = b.px + t * b.vx\n\t// a.py + t * a.vy = b.py + t * b.vy\n\n\t// Reformulate as t = (b.px - a.px) / (a.vx - b.vx) and similarly for y\n\t// The intersection is valid only if both t values for x and y are equal.\n\n\tdeltaVx := a.vx - b.vx\n\tdeltaVy := a.vy - b.vy\n\tdeltaPx := b.px - a.px\n\tdeltaPy := b.py - a.py\n\n\t// If velocities are the same in any direction, paths are parallel and do not intersect unless they are already at the same point.\n\tif deltaVx == 0 || deltaVy == 0 {\n\t\treturn false\n\t}\n\n\t// Time at which the paths intersect in both x and y dimensions.\n\ttX := float64(deltaPx) / float64(deltaVx)\n\ttY := float64(deltaPy) / float64(deltaVy)\n\n\tif tX != tY || tX \u003c 0 {\n\t\t// The paths do not intersect or intersect in the past.\n\t\treturn false\n\t}\n\n\t// Check if the intersection point is within the given range.\n\tintersectionX := a.px + int(tX)*a.vx\n\tintersectionY := a.py + int(tY)*a.vy\n\n\treturn minX \u003c= intersectionX \u0026\u0026 intersectionX \u003c= maxX \u0026\u0026 minY \u003c= intersectionY \u0026\u0026 intersectionY \u003c= maxY\n}\n\nfunc main() {\n\t// Open the file\n\tfile, err := os.Open(\"input.txt\")\n\tif err != nil {\n\t\tfmt.Println(\"Error: unable to open input file:\", err)\n\t\tos.Exit(1)\n\t}\n\tdefer file.Close()\n\n\tscanner := bufio.NewScanner(file)\n\n\thailstones := make([]Hailstone, 0)\n\n\t// Minimum and maximum values for the X and Y coordinates.\n\tminX, maxX := 200000000000000, 400000000000000\n\tminY, maxY := minX, maxX\n\n\t// Read the input and parse the hailstone data\n\tfor scanner.Scan() {\n\t\tfields := strings.Fields(scanner.Text())\n\t\tif len(fields) != 2 {\n\t\t\tcontinue\n\t\t}\n\n\t\tpos := strings.Split(fields[0], \",\")\n\t\tvel := strings.Split(fields[1], \"@\")\n\n\t\t// Parse positions\n\t\tpx, errPx := strconv.Atoi(strings.TrimSpace(pos[0]))\n\t\tpy, errPy := strconv.Atoi(strings.TrimSpace(pos[1]))\n\t\tif errPx != nil || errPy != nil {\n\t\t\tfmt.Println(\"Error: invalid position data in input file\")\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\t// Parse velocities\n\t\tvx, errVx := strconv.Atoi(strings.TrimSpace(vel[0]))\n\t\tvy, errVy := strconv.Atoi(strings.TrimSpace(vel[1]))\n\t\tif errVx != nil || errVy != nil {\n\t\t\tfmt.Println(\"Error: invalid velocity data in input file\")\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\thailstones = append(hailstones, Hailstone{px: px, py: py, vx: vx, vy: vy})\n\t}\n\n\t// Check for errors during scanning the file\n\tif err := scanner.Err(); err != nil {\n\t\tfmt.Println(\"Error: unable to read input file:\", err)\n\t\tos.Exit(1)\n\t}\n\n\t// Now, loop over the pairs of hailstones and count the intersections that occur within the range.\n\tcount := 0\n\tfor i, a := range hailstones {\n\t\tfor j, b := range hailstones {\n\t\t\tif i \u003e= j {\n\t\t\t\tcontinue // Avoid double counting and self-intersection\n\t\t\t}\n\t\t\tif isIntersectionInRange(a, b, minX, maxX, minY, maxY) {\n\t\t\t\tcount++\n\t\t\t}\n\t\t}\n\t}\n\n\t// Print the result\n\tfmt.Println(count)\n}\n```\n\nTo execute this code, save the content to \"main.go\" and have your \"input.txt\" in the same directory. Then run the command `go run main.go`. The program will read the \"input.txt\" file, process the hailstone intersections, and print the number of intersections within the specified range.\n\nPlease be aware that the specific task requirements may need further adjustments to the code, especially regarding the interpretation of the condition checks for intersection and path calculations. If your input data is structured differently than assumed here or if there are additional nuances in the task definition, those will need to be addressed in the code.",
    "aiResponseCode": "\npackage main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n\t\"strconv\"\n\t\"strings\"\n)\n\ntype Hailstone struct {\n\tpx, py, vx, vy int\n}\n\n// isIntersectionInRange checks if the hailstones intersect within the given range.\nfunc isIntersectionInRange(a, b Hailstone, minX, maxX, minY, maxY int) bool {\n\t// Time at which the two hailstones intersect can be found by solving two equations:\n\t// a.px + t * a.vx = b.px + t * b.vx\n\t// a.py + t * a.vy = b.py + t * b.vy\n\n\t// Reformulate as t = (b.px - a.px) / (a.vx - b.vx) and similarly for y\n\t// The intersection is valid only if both t values for x and y are equal.\n\n\tdeltaVx := a.vx - b.vx\n\tdeltaVy := a.vy - b.vy\n\tdeltaPx := b.px - a.px\n\tdeltaPy := b.py - a.py\n\n\t// If velocities are the same in any direction, paths are parallel and do not intersect unless they are already at the same point.\n\tif deltaVx == 0 || deltaVy == 0 {\n\t\treturn false\n\t}\n\n\t// Time at which the paths intersect in both x and y dimensions.\n\ttX := float64(deltaPx) / float64(deltaVx)\n\ttY := float64(deltaPy) / float64(deltaVy)\n\n\tif tX != tY || tX \u003c 0 {\n\t\t// The paths do not intersect or intersect in the past.\n\t\treturn false\n\t}\n\n\t// Check if the intersection point is within the given range.\n\tintersectionX := a.px + int(tX)*a.vx\n\tintersectionY := a.py + int(tY)*a.vy\n\n\treturn minX \u003c= intersectionX \u0026\u0026 intersectionX \u003c= maxX \u0026\u0026 minY \u003c= intersectionY \u0026\u0026 intersectionY \u003c= maxY\n}\n\nfunc main() {\n\t// Open the file\n\tfile, err := os.Open(\"input.txt\")\n\tif err != nil {\n\t\tfmt.Println(\"Error: unable to open input file:\", err)\n\t\tos.Exit(1)\n\t}\n\tdefer file.Close()\n\n\tscanner := bufio.NewScanner(file)\n\n\thailstones := make([]Hailstone, 0)\n\n\t// Minimum and maximum values for the X and Y coordinates.\n\tminX, maxX := 200000000000000, 400000000000000\n\tminY, maxY := minX, maxX\n\n\t// Read the input and parse the hailstone data\n\tfor scanner.Scan() {\n\t\tfields := strings.Fields(scanner.Text())\n\t\tif len(fields) != 2 {\n\t\t\tcontinue\n\t\t}\n\n\t\tpos := strings.Split(fields[0], \",\")\n\t\tvel := strings.Split(fields[1], \"@\")\n\n\t\t// Parse positions\n\t\tpx, errPx := strconv.Atoi(strings.TrimSpace(pos[0]))\n\t\tpy, errPy := strconv.Atoi(strings.TrimSpace(pos[1]))\n\t\tif errPx != nil || errPy != nil {\n\t\t\tfmt.Println(\"Error: invalid position data in input file\")\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\t// Parse velocities\n\t\tvx, errVx := strconv.Atoi(strings.TrimSpace(vel[0]))\n\t\tvy, errVy := strconv.Atoi(strings.TrimSpace(vel[1]))\n\t\tif errVx != nil || errVy != nil {\n\t\t\tfmt.Println(\"Error: invalid velocity data in input file\")\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\thailstones = append(hailstones, Hailstone{px: px, py: py, vx: vx, vy: vy})\n\t}\n\n\t// Check for errors during scanning the file\n\tif err := scanner.Err(); err != nil {\n\t\tfmt.Println(\"Error: unable to read input file:\", err)\n\t\tos.Exit(1)\n\t}\n\n\t// Now, loop over the pairs of hailstones and count the intersections that occur within the range.\n\tcount := 0\n\tfor i, a := range hailstones {\n\t\tfor j, b := range hailstones {\n\t\t\tif i \u003e= j {\n\t\t\t\tcontinue // Avoid double counting and self-intersection\n\t\t\t}\n\t\t\tif isIntersectionInRange(a, b, minX, maxX, minY, maxY) {\n\t\t\t\tcount++\n\t\t\t}\n\t\t}\n\t}\n\n\t// Print the result\n\tfmt.Println(count)\n}\n",
    "aiResponseCodeOutput": "0\n",
    "aiAnswerFound": true,
    "aiAnswer": "0"
  },
  "aocSolve": {
    "level": "1",
    "answer": "0",
    "attemptInfo": "LeaderBoard is not full solution was not submitted",
    "attemptAllowSubmit": false
  }
}